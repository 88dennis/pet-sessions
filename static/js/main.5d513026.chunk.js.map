{"version":3,"sources":["components/AddAppointments.js","components/ListAppointments.js","components/SearchAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","preventDefault","tempApt","this","props","addAppointment","setState","toggleForm","target","value","name","plusSign","minusSign","tabSign","formDisplay","className","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","ListAppointments","appointments","map","item","index","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","petNameRecord","showRecord","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","App","console","log","myAppointments","updatedApts","filter","apt","lastIndex","queryText","viewAll","fetch","then","response","json","result","apts","query","order","dir","petname","toLowerCase","newState","obj","find","elem","aptIndex","indexOf","tempApts","unshift","filteredApts","viewAllbtn","sort","a","b","eachItem","includes","basename","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d513026.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FaPlus } from 'react-icons/fa';\nimport { FaMinus } from 'react-icons/fa';\n\nclass AddAppointments extends Component {\n  constructor() {\n    super();\n    this.state = {\n      petName: '',\n      ownerName: '',\n      aptDate: '',\n      aptTime: '',\n      aptNotes: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd(e) {\n    e.preventDefault();\n    let tempApt = {\n      petName: this.state.petName,\n      ownerName: this.state.ownerName,\n      aptDate: this.state.aptDate + ' ' + this.state.aptTime,\n      aptNotes: this.state.aptNotes\n    };\n\n    this.props.addAppointment(tempApt);\n    \n    this.setState({\n      petName: '',\n      ownerName: '',\n      aptDate: '',\n      aptTime: '',\n      aptNotes: ''\n    });\n    this.props.toggleForm();\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n\n\n    let plusSign = <FaPlus /> \n    let minusSign = <FaMinus /> \n    let tabSign = this.props.formDisplay ? minusSign : plusSign;\n \n    return (\n      <div\n        className={\n          'card textcenter mt-3 ' +\n          (this.props.formDisplay ? '' : 'add-appointment')\n        }\n      >\n        <div\n          className=\"apt-addheading card-header bg-primary text-white\"\n          onClick={this.props.toggleForm}\n        >\n            {tabSign} Add Appointment\n         {/* {this.props.formDisplay ? <FaMinus /> : <FaPlus />} Add Appointment */}\n        </div>\n        <div className=\"card-body\">\n          <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\n            <div className=\"form-group form-row\">\n              <label\n                className=\"col-md-2 col-form-label text-md-right\"\n                htmlFor=\"petName\"\n                readOnly\n              >\n                Pet Name\n              </label>\n              <div className=\"col-md-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"petName\"\n                  placeholder=\"Pet's Name\"\n                  value={this.state.petName}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group form-row\">\n              <label\n                className=\"col-md-2 col-form-label text-md-right\"\n                htmlFor=\"ownerName\"\n              >\n                Pet Owner\n              </label>\n              <div className=\"col-md-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"ownerName\"\n                  placeholder=\"Owner's Name\"\n                  value={this.state.ownerName}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group form-row\">\n              <label\n                className=\"col-md-2 col-form-label text-md-right\"\n                htmlFor=\"aptDate\"\n              >\n                Date\n              </label>\n              <div className=\"col-md-4\">\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  name=\"aptDate\"\n                  id=\"aptDate\"\n                  value={this.state.aptDate}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <label\n                className=\"col-md-2 col-form-label text-md-right\"\n                htmlFor=\"aptTime\"\n              >\n                Time\n              </label>\n              <div className=\"col-md-4\">\n                <input\n                  type=\"time\"\n                  className=\"form-control\"\n                  name=\"aptTime\"\n                  id=\"aptTime\"\n                  value={this.state.aptTime}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group form-row\">\n              <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                Apt. Notes\n              </label>\n              <div className=\"col-md-10\">\n                <textarea\n                  className=\"form-control\"\n                  rows=\"4\"\n                  cols=\"50\"\n                  name=\"aptNotes\"\n                  id=\"aptNotes\"\n                  placeholder=\"Appointment Notes\"\n                  value={this.state.aptNotes}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group form-row mb-0\">\n              <div className=\"offset-md-2 col-md-10\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary d-block ml-auto\"\n                >\n                  Add Appointment\n                </button>\n              </div>\n              \n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddAppointments;\n","import React, { Component } from 'react';\nimport {FaTimes} from 'react-icons/fa';\nimport Moment from 'react-moment';\n\nclass ListAppointments extends Component {\n    render() {\n        return (\n          <div className=\"appointment-list item-list mb-3\">\n            {this.props.appointments.map((item, index) => (\n              <div className=\"pet-item col media py-3\" key={item.aptId}>\n                <div className=\"mr-3\">\n                  <button\n                    className=\"pet-delete btn btn-sm btn-danger\"\n                    onClick={() => this.props.deleteAppointment(item.aptId)}\n                  >\n                   <FaTimes />\n                   \n                  </button>\n                </div>\n    \n                <div className=\"pet-info media-body\">\n                  <div className=\"pet-head d-flex\">\n                    <span\n                      className=\"pet-name\"\n                      contentEditable\n                      suppressContentEditableWarning\n                      onBlur={e =>\n                        this.props.updateInfo(\n                          'petName',\n                          e.target.innerText,\n                          item.aptId\n                        )\n                      }\n                    >\n                      {/* {item.aptId}-- */}\n                      {item.petName}\n                    </span>\n                    <span className=\"apt-date ml-auto\">\n                      <Moment\n                        date={item.aptDate}\n                        parse=\"YYYY-MM-dd hh:mm\"\n                        format=\"MMM-d h:mma\"\n                      />\n                    </span>\n                  </div>\n    \n                  <div className=\"owner-name\">\n                   {this.props.petNameRecord ===\"\" ? <button onClick={()=>this.props.showRecord(item.petName)}><span className=\"label-item\">Show all records of {item.petName}  </span></button> : \"\" } \n                  </div>\n                  <div className=\"owner-name\">\n                    <span className=\"label-item\">Owner: </span>\n                    <span\n                      contentEditable\n                      suppressContentEditableWarning\n                      onBlur={e =>\n                        this.props.updateInfo(\n                          'ownerName',\n                          e.target.innerText,\n                          item.aptId\n                        )\n                      }\n                    >\n                      {item.ownerName}\n                    </span>\n                  </div>\n                  <div\n                    className=\"apt-notes\"\n                    contentEditable\n                    suppressContentEditableWarning\n                    onBlur={e =>\n                      this.props.updateInfo(\n                        'aptNotes',\n                        e.target.innerText,\n                        item.aptId\n                      )\n                    }\n                  >\n                    {item.aptNotes}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n      }\n}\n\nexport default ListAppointments\n","import React, { Component } from 'react';\n\nclass SearchAppointments extends Component {\n  render() {\n    return (\n      <div className=\"search-appointments row justify-content-center my-4\">\n        <div className=\"col-md-6\">\n          <div className=\"input-group\">\n            <input\n              id=\"SearchApts\"\n              type=\"text\"\n              className=\"form-control\"\n              aria-label=\"Search Appointments\"\n              onChange={e => this.props.searchApts(e.target.value)}\n            />\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary dropdown-toggle\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Sort by: <span className=\"caret\" />\n              </button>\n\n              <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n                <button\n                \n                  className={\n                    'sort-by dropdown-item ' +\n                    (this.props.orderBy === 'petName' ? 'active' : '')\n                  }\n                  onClick={e =>\n                    this.props.changeOrder('petName', this.props.orderDir)\n                  }\n                  href=\"#\"\n                >\n                  Pet Name\n                </button>\n                <button\n                  className={\n                    'sort-by dropdown-item ' +\n                    (this.props.orderBy === 'aptDate' ? 'active' : '')\n                  }\n                  onClick={e =>\n                    this.props.changeOrder('aptDate', this.props.orderDir)\n                  }\n                  href=\"#\"\n                >\n                  Date\n                </button>\n                <button\n                  className={\n                    'sort-by dropdown-item ' +\n                    (this.props.orderBy === 'ownerName' ? 'active' : '')\n                  }\n                  onClick={e =>\n                    this.props.changeOrder('ownerName', this.props.orderDir)\n                  }\n                  href=\"#\"\n                >\n                  Owner\n                </button>\n                <div role=\"separator\" className=\"dropdown-divider\" />\n                <button\n                  className={\n                    'sort-by dropdown-item ' +\n                    (this.props.orderDir === 'asc' ? 'active' : '')\n                  }\n                  onClick={e =>\n                    this.props.changeOrder(this.props.orderBy, 'asc')\n                  }\n                  href=\"#\"\n                >\n                  Asc\n                </button>\n                <button\n                  className={\n                    'sort-by dropdown-item ' +\n                    (this.props.orderDir === 'desc' ? 'active' : '')\n                  }\n                  onClick={e =>\n                    this.props.changeOrder(this.props.orderBy, 'desc')\n                  }\n                  href=\"#\"\n                >\n                  Desc\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchAppointments;\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments';\nimport ListAppointments from './ListAppointments';\nimport SearchAppointments from './SearchAppointments';\n// import {findIndex} from 'lodash';\n\nclass  App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      myAppointments: [],\n      lastIndex: 1,\n      orderBy: 'petName',\n      orderDir: 'asc',\n      formDisplay: false,\n      petNameRecord:\"\",\n      queryText:\"\"\n    }\n\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.showRecord = this.showRecord.bind(this);\n    this.viewAll = this.viewAll.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n\n  }\n\n  componentDidMount(){\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(result => {\n        const apts = result.map(item => {\n          item.aptId = this.state.lastIndex;\n          this.setState({lastIndex: this.state.lastIndex + 1})\n          return item;\n        })\n        this.setState({\n          myAppointments: apts\n        },() => console.log(this.state.myAppointments));\n      })\n\n\n  }\n\n  toggleForm(){\n    // const newState = {...this.state};\n    // newState.formDisplay = !newState.formDisplay;\n    // this.setState(newState);\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    })\n  }\n\n  searchApts(query) {\n    this.setState({ \n      queryText: query\n     });\n  } \n  changeOrder(order, dir){\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    })\n  }\n\n  showRecord(petname) {\n    this.setState({\n      petNameRecord: petname.toLowerCase()\n    })\n  }\n\n  viewAll() {\n    this.setState({\n      petNameRecord: \"\"\n    })\n    \n  }\n\nupdateInfo(name, value, id) {\n  const newState = {...this.state}\n  let obj = this.state.myAppointments.find(elem => elem.aptId === id);\n  let aptIndex = this.state.myAppointments.indexOf(obj);\n  console.log(aptIndex)\n  newState.myAppointments[aptIndex][name] = value;\n  console.log(obj[name])\n  this.setState(newState)\n  }\n\n//USING LODASH\n//   updateInfo(name, value, id) {\n// let tempApts = this.state.myAppointments;\n// let aptIndex = findIndex(this.state.myAppointments, {\n//   aptId: id\n// });\n\n// tempApts[aptIndex][name] = value;\n// this.setState({\n//   myAppointments: tempApts\n// })\n\n\n//   }\n  addAppointment(apt){\n    let tempApts = this.state.myAppointments;\n    apt.aptId = this.state.lastIndex;\n    tempApts.unshift(apt);\n\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    })\n    console.log(apt.aptId);\n    console.log(tempApts);\n  }\n  //USING LODASH\n  // deleteAppointment(apt){\n  //   let tempApts = this.state.myAppointments;\n  //   tempApts = without(tempApts, apt);\n  //   console.log(tempApts)\n  //   this.setState({\n  //     myAppointments: tempApts\n  //   });\n  // }\n\n  // USING FILTER AND ID\n  deleteAppointment = (id)=>{\n// console.log(id)\n// alert(id);\n    console.log(this.state.myAppointments);\n    console.log(id, \"ID\")\n    let updatedApts = this.state.myAppointments.filter(apt => apt.aptId !== id);\n    console.log(updatedApts);\n    this.setState({\n      myAppointments: updatedApts\n    });\n\n  }\n\n  render(){\n\n    let order;\n    let filteredApts = this.state.myAppointments;\n    let viewAllbtn=\"\"\n\n    if(this.state.petNameRecord !==\"\") {\n      filteredApts = filteredApts.filter(item => item.petName.toLowerCase() === this.state.petNameRecord);\n      if (this.state.orderDir === 'asc') {\n        order = 1;\n      } else {\n        order = -1;\n      }\n  \n      filteredApts = filteredApts\n        .sort((a, b) => {\n          if (\n            a[this.state.orderBy].toLowerCase() <\n            b[this.state.orderBy].toLowerCase()\n          ) {\n            return -1 * order;\n          } else {\n            return 1 * order;\n          }\n        })\n        .filter(eachItem => {\n          return (\n            eachItem['petName']\n              .toLowerCase()\n              .includes(this.state.queryText.toLowerCase()) ||\n            eachItem['ownerName']\n              .toLowerCase()\n              .includes(this.state.queryText.toLowerCase()) ||\n            eachItem['aptNotes']\n              .toLowerCase()\n              .includes(this.state.queryText.toLowerCase())\n          );\n        });\n      viewAllbtn = <button onClick={()=>this.viewAll()}><span className=\"label-item\">View All Records </span></button>\n    } else {\n\n      if (this.state.orderDir === 'asc') {\n        order = 1;\n      } else {\n        order = -1;\n      }\n  \n      filteredApts = filteredApts\n        .sort((a, b) => {\n          if (\n            a[this.state.orderBy].toLowerCase() <\n            b[this.state.orderBy].toLowerCase()\n          ) {\n            return -1 * order;\n          } else {\n            return 1 * order;\n          }\n        })\n        .filter(eachItem => {\n          return (\n            eachItem['petName']\n              .toLowerCase()\n              .includes(this.state.queryText.toLowerCase()) ||\n            eachItem['ownerName']\n              .toLowerCase()\n              .includes(this.state.queryText.toLowerCase()) ||\n            eachItem['aptNotes']\n              .toLowerCase()\n              .includes(this.state.queryText.toLowerCase())\n          );\n        });\n    // filteredApts = this.state.myAppointments;\n    }\n// function sortList (orderDir, order, filteredAptsArr, orderBy) {\n  \n//   if(orderDir === \"asc\") {\n//     order = 1;\n//   } else {\n//     order = -1;\n//   }\n\n//   filteredAptsArr.sort((a,b) => {\n//     if(a[orderBy].toLowerCase() < b[orderBy].toLowerCase()){\n//       return -1 * order\n//     } else {\n//       return 1 * order\n//     }\n//   })\n// }\n   \n    // if(this.state.orderDir === \"asc\") {\n    //   order = 1;\n    // } else {\n    //   order = -1;\n    // }\n    // newFiltered.sort((a,b) => {\n    //   if(a[this.state.orderBy].toLowerCase() < b[this.state.orderBy].toLowerCase()){\n    //     return -1 * order\n    //   } else {\n    //     return 1 * order\n    //   }\n    // });\n\n    return (\n      <main basename={process.env.PUBLIC_URL} className=\"page bg-white\" id=\"petratings\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 bg-white\">\n                <div className=\"container\">\n      <h1>Pet Sessions</h1>\n                   <AddAppointments\n                    formDisplay={this.state.formDisplay}\n                    toggleForm={this.toggleForm}\n                    addAppointment={this.addAppointment}\n                  /> \n\n                   <SearchAppointments\n                    orderBy={this.state.orderBy}\n                    orderDir={this.state.orderDir}\n                    changeOrder={this.changeOrder}\n                    searchApts={this.searchApts}\n                  />\n                  {viewAllbtn}\n                  <ListAppointments\n                    appointments={filteredApts}\n                    showRecord={this.showRecord}\n                    deleteAppointment={this.deleteAppointment}\n                    petNameRecord={this.state.petNameRecord}\n                    updateInfo={this.updateInfo}\n                  /> \n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}